<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2019
 *
 * Generated from /home/dev/civicrm/civicrm-buildkit/build/dmaster/sites/default/files/civicrm/ext/org.civicrm.webtracking/xml/schema/CRM/WebTracking/WebTracking.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:d94e932897f4a41fe522c67f951d8dec)
 */

/**
 * Database access object for the WebTracking entity.
 */
class CRM_WebTracking_DAO_WebTracking extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_webtracking';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Serial No.
   *
   * @var int
   */
  public $id;

  /**
   * Holds the id of the Event/Contribution page
   *
   * @var int
   */
  public $page_id;

  /**
   * Denotes whether the page is an event page or a contribution page
   *
   * @var string
   */
  public $page_category;

  /**
   * Denotes whether webtracking is enabled or not
   *
   * @var bool
   */
  public $enable_tracking;

  /**
   * Unique UAID provided by google analytics
   *
   * @var string
   */
  public $tracking_id;

  /**
   * Denotes whether event tracking is enabled or not
   *
   * @var bool
   */
  public $ga_event_tracking;

  /**
   * Track the event of users visiting the info page
   *
   * @var bool
   */
  public $track_info;

  /**
   * Track the event of users visiting the registration page
   *
   * @var bool
   */
  public $track_register;

  /**
   * Track the event of users visiting the confirmation page
   *
   * @var bool
   */
  public $track_confirm_register;

  /**
   * Track the event of users visiting the thank you page
   *
   * @var bool
   */
  public $track_thank_you;

  /**
   * Track the event of user changing the default price option
   *
   * @var bool
   */
  public $track_price_change;

  /**
   * Denotes whether ecommerce tracking is enabled or not
   *
   * @var bool
   */
  public $track_ecommerce;

  /**
   * Denotes whether the page is the primary page of a google analytics experiment
   *
   * @var bool
   */
  public $is_experiment;

  /**
   * Unique experiment ID provided by google analytics
   *
   * @var string
   */
  public $experiment_id;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_webtracking';
    parent::__construct();
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Serial No.'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Serial No.'),
          'required' => TRUE,
          'where' => 'civicrm_webtracking.id',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'page_id' => [
          'name' => 'page_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Page ID'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Holds the id of the Event/Contribution page'),
          'required' => TRUE,
          'where' => 'civicrm_webtracking.page_id',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'page_category' => [
          'name' => 'page_category',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Page Category'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Denotes whether the page is an event page or a contribution page'),
          'required' => TRUE,
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'where' => 'civicrm_webtracking.page_category',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'enable_tracking' => [
          'name' => 'enable_tracking',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'html_type' => 'checkbox',
          'title' => CRM_WebTracking_ExtensionUtil::ts('Enable Tracking'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Denotes whether webtracking is enabled or not'),
          'where' => 'civicrm_webtracking.enable_tracking',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'tracking_id' => [
          'name' => 'tracking_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Tracking ID'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Unique UAID provided by google analytics'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'where' => 'civicrm_webtracking.tracking_id',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'ga_event_tracking' => [
          'name' => 'ga_event_tracking',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Enable Event Tracking'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Denotes whether event tracking is enabled or not'),
          'where' => 'civicrm_webtracking.ga_event_tracking',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'track_info' => [
          'name' => 'track_info',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Track Info'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Track the event of users visiting the info page'),
          'where' => 'civicrm_webtracking.track_info',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'track_register' => [
          'name' => 'track_register',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Track Register'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Track the event of users visiting the registration page'),
          'where' => 'civicrm_webtracking.track_register',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'track_confirm_register' => [
          'name' => 'track_confirm_register',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Track Confirm Register'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Track the event of users visiting the confirmation page'),
          'where' => 'civicrm_webtracking.track_confirm_register',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'track_thank_you' => [
          'name' => 'track_thank_you',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Track Thank You'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Track the event of users visiting the thank you page'),
          'where' => 'civicrm_webtracking.track_thank_you',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'track_price_change' => [
          'name' => 'track_price_change',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Track Price Change'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Track the event of user changing the default price option'),
          'where' => 'civicrm_webtracking.track_price_change',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'track_ecommerce' => [
          'name' => 'track_ecommerce',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Track Ecommerce'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Denotes whether ecommerce tracking is enabled or not'),
          'where' => 'civicrm_webtracking.track_ecommerce',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'is_experiment' => [
          'name' => 'is_experiment',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Is Experiment'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Denotes whether the page is the primary page of a google analytics experiment'),
          'where' => 'civicrm_webtracking.is_experiment',
          'default' => '0',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
        'experiment_id' => [
          'name' => 'experiment_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_WebTracking_ExtensionUtil::ts('Experiment ID'),
          'description' => CRM_WebTracking_ExtensionUtil::ts('Unique experiment ID provided by google analytics'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'where' => 'civicrm_webtracking.experiment_id',
          'table_name' => 'civicrm_webtracking',
          'entity' => 'WebTracking',
          'bao' => 'CRM_WebTracking_DAO_WebTracking',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'webtracking', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'webtracking', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
